@using Microsoft.AspNetCore.Mvc.TagHelpers
@model AscendNutrition.Web.ViewModels.Product.ProductDetailsViewModel;

<div class="container mt-5">

    <div class="row">

        <div class="col-md-8">

            <h2 class="mb-3"><u>@Model.Name</u></h2>

            <table class="table table-bordered">
                <tr>
                    <td><strong>Brand:</strong></td>
                    <td>@Model.Brand</td>
                </tr>
                <tr>
                    <td><strong>Suitability:</strong></td>
                    <td>@Model.Suitability</td>
                </tr>
                @if (!String.IsNullOrEmpty(Model.Size))
                {
                    <tr>
                        <td><strong>Size:</strong></td>
                        <td>
                            @if (Model.Size == "ThreeHundredGrams")
                            {
                                @:300 Grams
                            }
                            else if (Model.Size == "FiveHundredGrams")
                            {
                                @:500 Grams
                            }
                            else if (Model.Size == "OneKg")
                            {
                                @:1000 Grams
                            }
                            else if (Model.Size == "TwoKg")
                            {
                                @:2000 Grams
                            }
                            else
                            {
                                @:2500 Grams
                            }
                        </td>
                    </tr>
                }

                <tr>
                    <td><strong>Servings:</strong></td>
                    <td>@Model.Servings</td>
                </tr>
                <tr>
                    <td><strong>Price:</strong></td>
                    <td>@Model.Price.ToString("C")</td>
                </tr>
                @if (!string.IsNullOrEmpty(@Model.Flavor))
                {
                    <tr>
                        <td><strong>Flavor:</strong></td>
                        <td>@Model.Flavor</td>
                    </tr>
                }
                @if (Model.Description != null)
                {
                    <tr>
                        <td><strong>Description:</strong></td>
                        <td>@Model.Description</td>
                    </tr>
                }
            </table>

            @if (User?.Identity?.IsAuthenticated == true)
            {
                <div class="mt-4">

                    <div class="d-flex align-items-center">

                        <form asp-controller="Order" asp-action="AddToCart" method="post" class="ms-auto">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@Model.Id" />
                            <input type="hidden" name="quantity" value="1"/>
                            <button type="submit" class="btn btn-success" style="width: 150px;">Buy</button>
                        </form>
                    </div>
                </div>
            }
        </div>

        <div class="col-md-4">
            @if (@Model.ImageUrl != null)
            {
                if (Model.ImageUrl.Contains("http"))
                {
                    <img src=" @Model.ImageUrl" alt="@Model.Name" class="img-fluid" />
                }
                else
                {
                    <img src="@Url.Content("~/" + @Model.ImageUrl)" alt="Product Image" class="img-fluid" />
                }
            }
            else
            {
                <img src="@Url.Content("~/images/noimg.jpg")" alt="Product Image" class="img-fluid" />
            }
        </div>
    </div>

    @if (User?.Identity?.IsAuthenticated == true @* && Model.HasUserOrderedProduct == true && Model.HasUserReviewedProduct == false *@)
    {
        <form asp-controller="Product" asp-action="AddReview" method="get">
            @Html.AntiForgeryToken()
            <a asp-action="AddReview" asp-route-id="@Model.Id" class="btn btn-primary mt-3">Add a review:</a>
        </form>
    }

    <div class="row mt-5">
        <div class="col-md-8">
            <h4>Reviews</h4>
            <div class="list-group">
                @if (Model.Reviews != null && Model.Reviews.Any())
                {
                    foreach (var review in Model.Reviews.OrderByDescending(r => r.ReviewDate))
                    {
                        <div class="list-group-item">
                            <p><strong>@review.Name:</strong> @review.Rating/4</p>
                            <p>@review.Comment</p>
                            <small class="text-muted">@review.ReviewDate</small>
                        </div>
                    }
                }
                else
                {
                    <p>No reviews yet. Be the first to review!</p>
                }
            </div>
        </div>
    </div>
</div>